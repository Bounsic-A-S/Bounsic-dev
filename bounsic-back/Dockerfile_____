# Etapa 1: Construcci칩n
FROM python:3.11-slim AS builder

# Evitar problemas de encoding
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

# Crear directorio de trabajo
WORKDIR /app

# Instalar dependencias del sistema necesarias para paquetes como numpy, pandas, etc.
RUN apt-get update && apt-get install -y \
    build-essential \
    libffi-dev \
    libssl-dev \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Copiar solo requirements y preinstalar (esto aprovecha el cache de Docker)
COPY ./requirements.txt .

# Instalar dependencias en una carpeta separada
RUN pip install --upgrade pip \
    && pip install --prefix=/install -r requirements.txt

# Etapa 2: Imagen final m치s liviana
FROM python:3.11-slim

# Crear directorio de trabajo
WORKDIR /app

# Copiar las dependencias instaladas desde la etapa anterior
COPY --from=builder /install /usr/local

# Copiar el resto del c칩digo de la aplicaci칩n
COPY . .

# Exponer el puerto por defecto de FastAPI
EXPOSE 8000

# Comando para ejecutar la app
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]
